{"name": "test_order_scooter[\\u041f\\u0435\\u0442\\u0440-\\u041f\\u0435\\u0442\\u0440\\u043e\\u0432-\\u0421\\u0430\\u043d\\u043a\\u0442-\\u041f\\u0435\\u0442\\u0435\\u0440\\u0431\\u0443\\u0440\\u0433, \\u041d\\u0435\\u0432\\u0441\\u043a\\u0438\\u0439 \\u043f\\u0440., \\u0434. 20-89117654321-2-05.01.2024-2-grey-\\u0414\\u043e\\u043c\\u043e\\u0444\\u043e\\u043d \\u043d\\u0435 \\u0440\\u0430\\u0431\\u043e\\u0442\\u0430\\u0435\\u0442-bottom]", "status": "broken", "statusDetails": {"message": "ValueError: response body:\n{\"message\":\"API rate limit exceeded for 178.155.4.37. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\n\nrequest url:\nhttps://api.github.com/repos/mozilla/geckodriver/releases/latest\nresponse headers:\n{'Date': 'Sun, 02 Mar 2025 12:51:38 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1740920992', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '278', 'X-GitHub-Request-Id': '8EAF:111A38:7CA28E4:813A72F:67C4545A'}", "trace": "self = <Test_order.TestOrder object at 0x00000236050AA3F0>, method = <bound method TestOrder.test_order_scooter of <Test_order.TestOrder object at 0x00000236050AA3F0>>\n\n    @allure.step('Открываем браузер Firefox')\n    def setup_method(self, method):\n>       service = FirefoxService(executable_path=GeckoDriverManager().install())\n\nTest\\Test_order.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv2\\Lib\\site-packages\\webdriver_manager\\firefox.py:39: in install\n    driver_path = self._get_driver_binary_path(self.driver)\n.venv2\\Lib\\site-packages\\webdriver_manager\\core\\manager.py:35: in _get_driver_binary_path\n    binary_path = self._cache_manager.find_driver(driver)\n.venv2\\Lib\\site-packages\\webdriver_manager\\core\\driver_cache.py:107: in find_driver\n    driver_version = self.get_cache_key_driver_version(driver)\n.venv2\\Lib\\site-packages\\webdriver_manager\\core\\driver_cache.py:154: in get_cache_key_driver_version\n    return driver.get_driver_version_to_download()\n.venv2\\Lib\\site-packages\\webdriver_manager\\core\\driver.py:48: in get_driver_version_to_download\n    return self.get_latest_release_version()\n.venv2\\Lib\\site-packages\\webdriver_manager\\drivers\\firefox.py:29: in get_latest_release_version\n    resp = self._http_client.get(\n.venv2\\Lib\\site-packages\\webdriver_manager\\core\\http.py:36: in get\n    self.validate_response(resp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresp = <Response [403]>\n\n    @staticmethod\n    def validate_response(resp: requests.Response):\n        status_code = resp.status_code\n        if status_code == 404:\n            raise ValueError(f\"There is no such driver by url {resp.url}\")\n        elif status_code == 401:\n            raise ValueError(f\"API Rate limit exceeded. You have to add GH_TOKEN!!!\")\n        elif resp.status_code != 200:\n>           raise ValueError(\n                f\"response body:\\n{resp.text}\\n\"\n                f\"request url:\\n{resp.request.url}\\n\"\n                f\"response headers:\\n{dict(resp.headers)}\\n\"\n            )\nE           ValueError: response body:\nE           {\"message\":\"API rate limit exceeded for 178.155.4.37. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\",\"documentation_url\":\"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"}\nE           \nE           request url:\nE           https://api.github.com/repos/mozilla/geckodriver/releases/latest\nE           response headers:\nE           {'Date': 'Sun, 02 Mar 2025 12:51:38 GMT', 'Server': 'Varnish', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'deny', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': \"default-src 'none'; style-src 'unsafe-inline'\", 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-RateLimit-Used, X-RateLimit-Resource, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset', 'Content-Type': 'application/json; charset=utf-8', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '0', 'X-RateLimit-Reset': '1740920992', 'X-RateLimit-Resource': 'core', 'X-RateLimit-Used': '60', 'Content-Length': '278', 'X-GitHub-Request-Id': '8EAF:111A38:7CA28E4:813A72F:67C4545A'}\n\n.venv2\\Lib\\site-packages\\webdriver_manager\\core\\http.py:19: ValueError"}, "description": "Тест позитивного сценария заказа самоката.Проверяет: заполнение формы заказа,отображение кнопки статус заказа при успешном создании заказа,работу кнопок заказа (верхней и нижней)", "parameters": [{"name": "first_name", "value": "'Петр'"}, {"name": "last_name", "value": "'Петров'"}, {"name": "address", "value": "'Санкт-Петербург, Невский пр., д. 20'"}, {"name": "phone_number", "value": "'89117654321'"}, {"name": "metro_station_text", "value": "'2'"}, {"name": "delivery_date", "value": "'05.01.2024'"}, {"name": "rental_period_text", "value": "'2'"}, {"name": "color", "value": "'grey'"}, {"name": "comment", "value": "'Домофон не работает'"}, {"name": "button_type", "value": "'bottom'"}], "start": 1740920276776, "stop": 1740920276776, "uuid": "7f6b7755-4953-4731-a3c6-5925372d9e93", "historyId": "e674fb1d1840c79232bced74ec0536af", "testCaseId": "d9712ac285919e98176480601f07109c", "fullName": "Test.Test_order.TestOrder#test_order_scooter", "labels": [{"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "Test_order"}, {"name": "subSuite", "value": "TestOrder"}, {"name": "host", "value": "papalluck"}, {"name": "thread", "value": "27128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.Test_order"}]}